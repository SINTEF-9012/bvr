<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="cvl"
    nsURI="http://org.variabilitymodeling.cvl" nsPrefix="cvl">
  <eAnnotations source="doc">
    <details key="description" value="The following is a full normative description of each meta-classes."/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="CVLModel" eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="A CVL model is the root of the repository that describes the variabilities and resolutions relative to a specific base model."/>
      <details key="semantics" value="CVL models are executed and the appropriate base model is copied and transformed according to the semantic rules. See BaseModel to get a definition of what portion of the base model to start with.&#xD;&#xA;&#xD;&#xA;A CVL Model assumes that model elements are connected by one-way references (see ModelElement).&#xD;&#xA;The CVL execution will copy a portion of the base model as the starting point of the execution. The portion that is copied is the base model tree defined by the following:&#xD;&#xA;1. CVLModel.base points out a model element, say me&#xD;&#xA;2. From me follow container reference as far as it goes. This model element defines the root of the tree that will define the base model to be copied."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitCVLModel(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitCVLModel(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//CVLModel/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//CVLModel/accept/C"/>
          <eTypeArguments eTypeParameter="#//CVLModel/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//CVLModel/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variabilitySpecification"
        eType="#//VariabilitySpecification" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="CVL Model contains a Variability Specification."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resolutionSpecification"
        upperBound="-1" eType="#//ResolutionSpecification" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="CVL Model contains a number of Resolution Specifications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="The base pointer provides a link to the base model."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Substitution" abstract="true" eSuperTypes="#//ExecutablePrimitive">
    <eAnnotations source="doc">
      <details key="description" value="Substitution is the general notion of variability specifications that specify a substitution to be done on the copy of the base model."/>
      <details key="semantics" value="If replacementInstance is specified, the placement from this instance will be used. Further semantics of the substitution is given by its specializations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacementInstance" eType="#//ReplacementFragmentReference">
      <eAnnotations source="doc">
        <details key="description" value="Points to the ReplacementFragmentReference, which stores a given instance of a replacement fragment to be used in the substitution."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceSubstitution" eSuperTypes="#//Substitution">
    <eAnnotations source="doc">
      <details key="description" value="The Reference Substitution defines a substitution that will change a reference attribute in the base model."/>
      <details key="semantics" value="The semantics of a reference substitution rs is:&#xD;&#xA;&#xD;&#xA;ATTR(rs.placement.propertyName, vs.placement.targetObject) = rs.replacement.targetObject&#xD;&#xA;&#xD;&#xA;where ATTR is a reflective operation that, given a string and a reference to a model element, returns a reference (L-value) to the attribute (of the model element) with name given by the string."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitReferenceSubstitution(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitReferenceSubstitution(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ReferenceSubstitution/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ReferenceSubstitution/accept/C"/>
          <eTypeArguments eTypeParameter="#//ReferenceSubstitution/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ReferenceSubstitution/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="placement" lowerBound="1"
        eType="#//PlacementObject">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the reference to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacement" lowerBound="1"
        eType="#//ReplacementObject">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the new object to be referred."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueSubstitution" eSuperTypes="#//Substitution">
    <eAnnotations source="doc">
      <details key="description" value="The ValueSubstitution defines a substitution that will change the value of an attribute of a base model element."/>
      <details key="semantics" value="The semantics of a ValueSubstitution vs is:&#xD;&#xA;&#xD;&#xA;ATTR(vs.placement.propertyName, vs.placement.targetObject) = vs.replacement.value&#xD;&#xA;&#xD;&#xA;where ATTR is a reflective operation that given a string and a reference to a model element returns the reference (L-value) to the attribute (of the model element) with name given by the string."/>
      <details key="constraint" value="propertyName must be the name of an attribute of the model element."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitValueSubstitution(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitValueSubstitution(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ValueSubstitution/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ValueSubstitution/accept/C"/>
          <eTypeArguments eTypeParameter="#//ValueSubstitution/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ValueSubstitution/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="placement" lowerBound="1"
        eType="#//PlacementValue">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacement" lowerBound="1"
        eType="#//ReplacementValue">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the new value of the attribute."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FragmentSubstitution" eSuperTypes="#//Substitution">
    <eAnnotations source="doc">
      <details key="description" value="Fragment Substitution substitutes a fragment of the base model with another fragment of the base model."/>
      <details key="semantics" value="1. Delete the model elements defined by the PlacementFragment. &#xD;&#xA;The placement model elements can be found through FragmentSubstitution.placement's placementBoundaryElements that are of class ToPlacement (using the model element references called insideBoundaryElement) and the transitive closure of all references from these, where the traversal is cut off at any reference that has &#xD;&#xA;the same value as any of FragmentSubstitution.placement's PlacementBoundardyElement that are of class FromPlacement (using the model element references called outsideBoundaryElement). &#xD;&#xA;&#xD;&#xA;2. For the replacement fragments binding, copy its content onto the hole made by the deletion of the placement fragment. The placement and replacement boundary elements must correspond. &#xD;&#xA;The content model elements can be found through FragmentSubstitution. replacement's  ReplacementBoundaryElement that are of type ToReplacement (using the model element references called insideBoundaryElement) and all model elements found through the transitive closure of all references from this set of model elements, where the traversal is cut off at any reference that has the same value as any of FragmentSubstitution.replacement's ReplacementBoundaryElement that are of type FromReplacement (using the model element references called outsideBoundaryElement).&#xD;&#xA;&#xD;&#xA;3. Binding boundary elements. The placement and replacement boundary elements are connected by bindings. The bindings are given by the BoundaryElementBindings.&#xD;&#xA;&#xD;&#xA;3.1. FromBinding: &#xD;&#xA;         fromReplacement.insideBoundaryElement.propertyName[] =      &#xD;&#xA;           fromPlacement.outsideBoundaryElement[]&#xD;&#xA;&#xD;&#xA;3.2. ToBinding: &#xD;&#xA;       toPlacement.outsideBoundaryElement.propertyName[] =  &#xD;&#xA;           toReplacement.insideBoundaryElement[]. &#xD;&#xA;&#xD;&#xA;This definition in fact also covers attributes that have multiplicity. Such attributes may be seen as arrays or collections, and repeated reference assignments to such attributes during variability transformation will mean adding a new individual reference to the identifier collection."/>
      <details key="constraint" value="The boundary elements define all references going in and out of the placement fragment.&#xD;&#xA;The boundary elements fully define all references going in &#xD;&#xA;and out of the replacement fragment."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitFragmentSubstitution(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitFragmentSubstitution(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//FragmentSubstitution/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//FragmentSubstitution/accept/C"/>
          <eTypeArguments eTypeParameter="#//FragmentSubstitution/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//FragmentSubstitution/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="placement" lowerBound="1"
        eType="#//PlacementFragment">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the fragment to be replaced."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacement" lowerBound="1"
        eType="#//ReplacementFragmentAbstract">
      <eAnnotations source="doc">
        <details key="description" value="The new fragment to be copied and used as replacement."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rfRef" eType="#//ReplacementFragmentReference">
      <eAnnotations source="doc">
        <details key="description" value="Specifies which ReplacementFragmentReference that will store the instance of the replacement fragment used in this substitution."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="boundaryElementBinding"
        upperBound="-1" eType="#//BoundaryElementBinding" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the binding betwwen the placement and replacement fragments."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlacementFragment" eSuperTypes="#//CVLNamedElement #//PlacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="A PlacementFragment defines a fragment (set of model elements) of the base model that will be replaced by a ReplacementFragment during the variability transformation. The set of model elements of the fragment will be deleted."/>
      <details key="semantics" value="The semantics of the Placement Fragment can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitPlacementFragment(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitPlacementFragment(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//PlacementFragment/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//PlacementFragment/accept/C"/>
          <eTypeArguments eTypeParameter="#//PlacementFragment/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//PlacementFragment/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="boundaryElement" upperBound="-1"
        eType="#//PlacementBoundaryElement" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="The boundary elements captures all the relations from and to the fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="usage" eType="#//PlacementFragmentUsage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementFragment" eSuperTypes="#//CVLNamedElement #//ReplacementFragmentAbstract">
    <eAnnotations source="doc">
      <details key="description" value="Replacement Fragment defines a fragment of the base model that will be used as replacement for some placement fragment of the base model."/>
      <details key="semantics" value="The semantics of Replacement Fragment can be found under Fragment Substitution."/>
      <details key="constraint" value="The pla&#x9;cements contained in a replacement fragments should only involve model elements which are inside the replacement fragment. These placements can be used in all instances of a the replacement fragment."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitReplacementFragment(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitReplacementFragment(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ReplacementFragment/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ReplacementFragment/accept/C"/>
          <eTypeArguments eTypeParameter="#//ReplacementFragment/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ReplacementFragment/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="boundaryElement" upperBound="-1"
        eType="#//ReplacementBoundaryElement" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="The boundary elements captures all the relations from and to the fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="placements" upperBound="-1"
        eType="#//PlacementLiteral" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Set of placements contained by the replacement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlacementBoundaryElement" abstract="true"
      eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="Represents the boundary between a placement fragment and the rest of the base model."/>
      <details key="semantics" value="The semantics of Variation Boundary Element is found under its specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementBoundaryElement" abstract="true"
      eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="Represents the boundary between a replacement fragment and the rest of the base model."/>
      <details key="semantics" value="The semantics of Replacement Boundary Element is found under its specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FromPlacement" eSuperTypes="#//PlacementBoundaryElement">
    <eAnnotations source="doc">
      <details key="description" value="FromPlacement is the kind of boundary element that defines the outwards boundary of the owning placement fragment.&#xD;&#xA;&#xD;&#xA;The outsideBoundaryElement refers to the model elements on the outside of the placement fragment. In a fragment substitution these have to be referred by model elements within the replacement fragment."/>
      <details key="semantics" value="The semantics of FromPlacement can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitFromPlacement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitFromPlacement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//FromPlacement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//FromPlacement/accept/C"/>
          <eTypeArguments eTypeParameter="#//FromPlacement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//FromPlacement/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outsideBoundaryElement"
        upperBound="-1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Outside Model Element that are referred by the model elements inside the placement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacementBoundaryElement"
        eType="#//FromReplacement" eOpposite="#//FromReplacement/insideRef">
      <eAnnotations source="doc">
        <details key="description" value="Reference to a FromReplacement in a containing replacement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ToPlacement" eSuperTypes="#//PlacementBoundaryElement">
    <eAnnotations source="doc">
      <details key="description" value="ToPlacement is the kind of boundary element that defines the boundary between the owning placement fragment and the rest of the base model.&#xD;&#xA;&#xD;&#xA;The insideBoundaryElements denote the ModelElements of owning fragment that are referred to by outside model elements.&#xD;&#xA; &#xD;&#xA;The outsideBoundaryElement together with the propertyName denotes the attributes of model elements on the outside of the placement fragment that refer to the inside boundary model elements. "/>
      <details key="semantics" value="The semantics of To Placement can be found under Fragment Substitution."/>
      <details key="constraint" value="insideBoundaryElement = outsideRef.insideBoundaryElement&#xD;&#xA;outsideBoundaryElement != null xor outsideRef != null"/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitToPlacement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitToPlacement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ToPlacement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ToPlacement/accept/C"/>
          <eTypeArguments eTypeParameter="#//ToPlacement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ToPlacement/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="Name of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="insideBoundaryElement"
        upperBound="-1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Model elements that are referred to by outside model elements. Used to distinguish miltiplicity references."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outsideBoundaryElement"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Outside model elements that refer model elements inside the fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outsideRef" eType="#//ToReplacement"
        eOpposite="#//ToReplacement/placementBoundaryElement">
      <eAnnotations source="doc">
        <details key="description" value="Reference to a ToReplacement in a containing replacement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ToReplacement" eSuperTypes="#//ReplacementBoundaryElement">
    <eAnnotations source="doc">
      <details key="description" value="ToReplacement is the kind of boundary element that defines the inwards boundary of the owning replacement fragment.&#xD;&#xA;&#xD;&#xA;The insideBoundaryElement defines the starting points for the traversal to isolate the model elements that as part of a fragment substitution will be copied into the placement fragment.&#xD;&#xA;"/>
      <details key="semantics" value="The semantics of To Replacement can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitToReplacement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitToReplacement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ToReplacement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ToReplacement/accept/C"/>
          <eTypeArguments eTypeParameter="#//ToReplacement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ToReplacement/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="insideBoundaryElement"
        upperBound="-1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Model elements that are referred to by outside model elements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="placementBoundaryElement"
        eType="#//ToPlacement" eOpposite="#//ToPlacement/outsideRef">
      <eAnnotations source="doc">
        <details key="description" value="Reference to a ToPlacement contained by the replacement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FromReplacement" eSuperTypes="#//ReplacementBoundaryElement">
    <eAnnotations source="doc">
      <details key="description" value="FromReplacement is the kind of boundary element that defines the outwards boundary of the owning replacement fragment.&#xD;&#xA;&#xD;&#xA;propertyName is the name of the reference attribute of inside boundary model element that will be changed as part of a fragment substitution.&#xD;&#xA;&#xD;&#xA;The insideBoundaryElements refer to the base model elements that will have their reference attributes updated as part of a fragment substitution.&#xD;&#xA;&#xD;&#xA;The outsideBoundaryElement refers to the model elements on the outside of the replacement fragment. In a fragment substitution these references are used to define the extent of the replacement fragment."/>
      <details key="semantics" value="The semantics of To Replacement can be found under Fragment Substitution."/>
      <details key="constraint" value="outsideBoundaryElement = insideRef.outsideBoundaryElement&#xD;&#xA;insideBoundaryElement != null xor insideRef != null&#xD;&#xA;"/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitFromReplacement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitFromReplacement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//FromReplacement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//FromReplacement/accept/C"/>
          <eTypeArguments eTypeParameter="#//FromReplacement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//FromReplacement/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="Name of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outsideBoundaryElement"
        upperBound="-1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Outside model elements that are referred by model elements inside the fragment.  Used to distinguish miltiplicity references."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="insideBoundaryElement"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Inside model elements that refer outside model elements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="insideRef" eType="#//FromPlacement"
        eOpposite="#//FromPlacement/replacementBoundaryElement">
      <eAnnotations source="doc">
        <details key="description" value="Reference to a FromPlacement contained by the replacement fragment."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CVLElement" eSuperTypes="#//visitors/Visitable">
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitCVLElement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitCVLElement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//CVLElement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//CVLElement/accept/C"/>
          <eTypeArguments eTypeParameter="#//CVLElement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//CVLElement/accept/C"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BoundaryElementBinding" abstract="true"
      eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="Specifies the binding between the boundary elements of the placement fragment and the replacement fragment."/>
      <details key="semantics" value="The semantics of the BoundaryElementBinding is found under its specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ToBinding" eSuperTypes="#//BoundaryElementBinding">
    <eAnnotations source="doc">
      <details key="description" value="ToBinding defines a binding between boundary elements of kind  ToPlacement/ToReplacement.&#xD;&#xA;&#xD;&#xA;The ToPlacement boundary element has to be bound to the ToReplacement."/>
      <details key="semantics" value="The semantics of the Placement Fragment can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitToBinding(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitToBinding(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ToBinding/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ToBinding/accept/C"/>
          <eTypeArguments eTypeParameter="#//ToBinding/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ToBinding/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="toPlacement" lowerBound="1"
        eType="#//ToPlacement">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the ToPlacement boundary element that is part of the binding."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="toReplacement" lowerBound="1"
        eType="#//ToReplacement">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the ToReplacement boundary element that is part of the binding."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FromBinding" eSuperTypes="#//BoundaryElementBinding">
    <eAnnotations source="doc">
      <details key="description" value="FromBinding defines a binding between boundary elements of kind FromPlacement/FromReplacement.&#xD;&#xA;&#xD;&#xA;The FromPlacement boundary element that has to be bound to the FromPlacement."/>
      <details key="semantics" value="The semantics of the Placement Fragment can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitFromBinding(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitFromBinding(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//FromBinding/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//FromBinding/accept/C"/>
          <eTypeArguments eTypeParameter="#//FromBinding/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//FromBinding/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fromPlacement" lowerBound="1"
        eType="#//FromPlacement">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the FromPlacement boundary element that is part of the binding."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fromReplacement" lowerBound="1"
        eType="#//FromReplacement">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the FromReplacement boundary element that is part of the binding."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompositeVariability" eSuperTypes="#//ExecutablePrimitive">
    <eAnnotations source="doc">
      <details key="description" value="A CompositeVariability contains a ordered set of Variability Specifications."/>
      <details key="semantics" value="The execution of a CompositeVariability consists of the execution of its executable primitives."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitCompositeVariability(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitCompositeVariability(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//CompositeVariability/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//CompositeVariability/accept/C"/>
          <eTypeArguments eTypeParameter="#//CompositeVariability/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//CompositeVariability/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variabilitySpecification"
        upperBound="-1" eType="#//VariabilitySpecification" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="CompositeVariability contains a number of Variability Specifications."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariabilitySpecification" abstract="true"
      eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="The VariabilitySpecifications of a CVLModel defines the variabilities on the base model represented by CVLModel. There are two kinds of VariabilitySpecifications: declarations and executable primitives."/>
      <details key="semantics" value="The semantics of the variability specification is given by the specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CVLNamedElement" abstract="true" eSuperTypes="#//CVLElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlacementLiteral" abstract="true" eSuperTypes="#//Declaration">
    <eAnnotations source="doc">
      <details key="description" value="A placement literaral represents a fragment of base model elements (or just a single element) that may be replaced by a replacement literal."/>
      <details key="semantics" value="The semantics of the placement literal is given by the specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementLiteral" abstract="true"
      eSuperTypes="#//Declaration">
    <eAnnotations source="doc">
      <details key="description" value="A replacement literaral represents a fragment of base model elements (or just a single element) that may replace the model elements of a placement literal."/>
      <details key="semantics" value="The semantics of the replacement literal is given by the specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlacementValue" eSuperTypes="#//PlacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="A placement value represents a value-typed attribute (with name propertyName) of the model element denoted by targetObject, an attribute that by a ValueSubstitution may get a new value represented by a ReplacementValue."/>
      <details key="semantics" value="Attribute with the name propertyName of the model element denoted by targetObject."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitPlacementValue(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitPlacementValue(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//PlacementValue/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//PlacementValue/accept/C"/>
          <eTypeArguments eTypeParameter="#//PlacementValue/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//PlacementValue/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="Name of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetObject" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Containing object of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlacementObject" eSuperTypes="#//PlacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="A placement object represents a reference-typed attribute (with name propertyName) of the model element denoted by targetObject, a reference attribute that by a ReferenceSubstitution may be changed to denote a model element represented by a ReplacementObject."/>
      <details key="semantics" value="Attribute with the name propertyName of the model element denoted by targetObject."/>
      <details key="constraint" value="targetObject must have a reference attribute with name propertyName. This is really a constraint on the combined CVL and base model."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitPlacementObject(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitPlacementObject(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//PlacementObject/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//PlacementObject/accept/C"/>
          <eTypeArguments eTypeParameter="#//PlacementObject/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//PlacementObject/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="Name of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetObject" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Containing object of the attribute to be changed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referredObject" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Reference to the previous referred object, to distinguish multiplicity references."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementValue" eSuperTypes="#//ReplacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="A value to replace the value of an attribute represented by a PlacementValue."/>
      <details key="semantics" value="The semantics of Replacement Value can be found under Value Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitReplacementValue(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitReplacementValue(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ReplacementValue/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ReplacementValue/accept/C"/>
          <eTypeArguments eTypeParameter="#//ReplacementValue/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ReplacementValue/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="The value that will be used in the substitution."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementObject" eSuperTypes="#//ReplacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="Represents the model element that a reference attribute will denote after a reference substitution."/>
      <details key="semantics" value="The semantics of Replacement Value can be found under Reference Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitReplacementObject(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitReplacementObject(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ReplacementObject/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ReplacementObject/accept/C"/>
          <eTypeArguments eTypeParameter="#//ReplacementObject/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ReplacementObject/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetObject" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject">
      <eAnnotations source="doc">
        <details key="description" value="Reference to the element to be used as value in the substitution."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResolutionSpecification" abstract="true"
      eSuperTypes="#//CVLNamedElement">
    <eAnnotations source="doc">
      <details key="description" value="The VariabilitySpecifications of a CVLModel defines the resolutions on the variability model represented by CVLModel."/>
      <details key="semantics" value="The semantics of the Resolution Specification is given by the specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResolutionElement" eSuperTypes="#//ResolutionSpecification">
    <eAnnotations source="doc">
      <details key="description" value="ResolutionElement contains the resolution values that will bind one specific executable primitive."/>
      <details key="semantics" value="A resolution element resolves a transformation represented by an executable primitive, so that this will be executed."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitResolutionElement(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitResolutionElement(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ResolutionElement/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ResolutionElement/accept/C"/>
          <eTypeArguments eTypeParameter="#//ResolutionElement/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ResolutionElement/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
        eType="#//ExecutablePrimitive">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the executable primitive to be executed."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resolution" upperBound="-1"
        eType="#//IteratorResolution" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Specifies further iterator resolutions that are resolved."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//Declaration">
    <eAnnotations source="doc">
      <details key="description" value="A type defines the properties of instances, properties that are defined by the body composite variability. The type will configure and instantiate a replacement fragment."/>
      <details key="semantics" value="The local replacement fragment is instantiated. Substitutions in the body configure this instance. This instance is then stored to the ReplacementFragmentReference in the invocation."/>
      <details key="constraint" value="Substitutions in the body can only access placements in the local replacement fragment or in other replacement fragment instances."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitType(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitType(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Type/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//Type/accept/C"/>
          <eTypeArguments eTypeParameter="#//Type/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//Type/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="#//CompositeVariability"
        containment="true">
      <eAnnotations source="doc">
        <details key="description" value="A CompositeVariability that contains a number of primitives."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="replacement" lowerBound="1"
        eType="#//ReplacementFragment" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="The local replacement fragment that will be instantiated and configured."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Invocation" eSuperTypes="#//ExecutablePrimitive">
    <eAnnotations source="doc">
      <details key="description" value="Invocation represents the invocation of a type, execution of the executable primitives of its body, and yielding as result a ReplacementFragmentReference."/>
      <details key="semantics" value="The execution of an invocation implies the generation of an instance according to the type, execution of its executable primitives, and the return of a ReplacementFragmentReference that denotes the resulting replacement fragment."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitInvocation(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitInvocation(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Invocation/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//Invocation/accept/C"/>
          <eTypeArguments eTypeParameter="#//Invocation/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//Invocation/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//Type">
      <eAnnotations source="doc">
        <details key="description" value="The Type to be invoked."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resolutionSpecification"
        eType="#//ResolutionSpecification" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Specifies a resolution model to allow partial resolution of the type itself."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rfRef" lowerBound="1" eType="#//ReplacementFragmentReference">
      <eAnnotations source="doc">
        <details key="description" value="Specifies which ReplacementFragmentReference that will store the instance of the replacement fragment returned from the type."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IteratorResolution" eSuperTypes="#//ResolutionSpecification">
    <eAnnotations source="doc">
      <details key="description" value="An iterator resolution specifies the iterator to be resolved, and which executable elements to be chosen."/>
      <details key="semantics" value="Chosen executable elements in the specified iterator will be executed."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitIteratorResolution(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitIteratorResolution(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//IteratorResolution/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//IteratorResolution/accept/C"/>
          <eTypeArguments eTypeParameter="#//IteratorResolution/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//IteratorResolution/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="iterator" lowerBound="1"
        eType="#//Iterator">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the iterator that will be resolved."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="choice" upperBound="-1"
        eType="#//ResolutionElement" containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the chosen executable elements to be executed."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="#//CompositeVariability">
    <eAnnotations source="doc">
      <details key="description" value="An iterator is a special kind of composite variability. While the execution of an ordinary composite variability may execute all the executable primitives of the composite variability, an iterator may impose restrictions on the number of executable primitives to be executed. Resolution specifications specify which of the executable primitives to execute."/>
      <details key="semantics" value="The execution of an iterator implies the execution of a number of its contained executable primitives. The number is defined by the pair (lowerLimit, upperLimit):&#xD;&#xA;&#xD;&#xA;(0,1): none or at most one of the executable primitives can be chosen (by a resolution specification)to be executed.&#xD;&#xA;&#xD;&#xA;(1,1): exactly one of the executable primitives can be chosen (by a resolution specification)to be executed.&#xD;&#xA;&#xD;&#xA;(m,n): at least m and at most n executable primitives can be chosen (by a resolution specification)for execution; if isUnique is true then each executable primitive can only be executed once.&#xD;&#xA;&#xD;&#xA;(0,*): any number of the executable primitives can be executed; if isUnique is true then each executable primitive can only be executed once."/>
      <details key="constraint" value="In case of (0,*) the value of isUnique must be specifified."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitIterator(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitIterator(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Iterator/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//Iterator/accept/C"/>
          <eTypeArguments eTypeParameter="#//Iterator/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//Iterator/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperLimit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="doc">
        <details key="description" value="Restricts the number of possible executions to an upper limit."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerLimit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="doc">
        <details key="description" value="Restricts the number of possible executions to a lower limit."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="doc">
        <details key="description" value="Defines whether each executable primitive can only be executed once."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementFragmentReference" eSuperTypes="#//ReplacementFragmentAbstract">
    <eAnnotations source="doc">
      <details key="description" value="ReplacementFragmentReference represent an instance of a replacement fragment. It can only store instances of replacement fragments of the specified kind (ReplacementFragmentReference.rfRef)."/>
      <details key="semantics" value="The semantics of ReplacementFragmentReference can be found under Fragment Substitution."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitReplacementFragmentReference(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitReplacementFragmentReference(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ReplacementFragmentReference/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ReplacementFragmentReference/accept/C"/>
          <eTypeArguments eTypeParameter="#//ReplacementFragmentReference/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ReplacementFragmentReference/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rfRef" lowerBound="1" eType="#//ReplacementFragment">
      <eAnnotations source="doc">
        <details key="description" value="Specifies the kind of replacement fragment this reference can store."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReplacementFragmentAbstract" abstract="true"
      eSuperTypes="#//ReplacementLiteral">
    <eAnnotations source="doc">
      <details key="description" value="ReplacementFragmentAbstract defines a fragment of the base model that will be used as replacement for some placement fragment of the base model."/>
      <details key="semantics" value="The semantics of the variability specification is given by the specializations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#//ExecutablePrimitive">
    <eAnnotations source="doc">
      <details key="description" value="Assign an instance of a replacement fragment to a ReplacementFragmentReference."/>
      <details key="semantics" value="The target ReplacementFragmentReference is assigned the value."/>
      <details key="constraint" value="The target and value have to be of the same kind of replacement fragment."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitAssignment(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitAssignment(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Assignment/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//Assignment/accept/C"/>
          <eTypeArguments eTypeParameter="#//Assignment/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//Assignment/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//ReplacementFragmentAbstract">
      <eAnnotations source="doc">
        <details key="description" value="The value to be assigned to the target."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//ReplacementFragmentReference">
      <eAnnotations source="doc">
        <details key="description" value="The ReplacementFragmentReference to be assigned a value."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Declaration" abstract="true" eSuperTypes="#//VariabilitySpecification">
    <eAnnotations source="doc">
      <details key="description" value="A Declaration defines either a type of composite variabilities, or fragments of the base model that are to be used by executable primitives."/>
      <details key="semantics" value="A Declaration introduces a type/literal that may be applied in executable primitives."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExecutablePrimitive" abstract="true"
      eSuperTypes="#//VariabilitySpecification">
    <eAnnotations source="doc">
      <details key="description" value="A CVL model is executed by executing its executable primitives. These will transform the copy of the base model according to substitutions."/>
      <details key="semantics" value="An executable primitive is executed if it is part of a variability specification of a CVLModel and selected for execution by a resolution specification."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//Declaration">
    <eAnnotations source="doc">
      <details key="description" value="Constraint is a way to describe restrictions to what resolutions can apply."/>
      <details key="semantics" value="The CVL model will be validated using the specified constraints."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitConstraint(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitConstraint(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Constraint/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//Constraint/accept/C"/>
          <eTypeArguments eTypeParameter="#//Constraint/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//Constraint/accept/C"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NOT" eSuperTypes="#//Constraint">
    <eAnnotations source="doc">
      <details key="description" value="Specifies an NOT expression."/>
      <details key="semantics" value="Negates the evaluation of the expression."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitNOT(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitNOT(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//NOT/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//NOT/accept/C"/>
          <eTypeArguments eTypeParameter="#//NOT/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//NOT/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="term" lowerBound="1" eType="#//Constraint"
        containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Left side of expression."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OR" eSuperTypes="#//Binary">
    <eAnnotations source="doc">
      <details key="description" value="Specifies an OR expression."/>
      <details key="semantics" value="Evaluates to true if at least one of the expressions is true."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitOR(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitOR(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//OR/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//OR/accept/C"/>
          <eTypeArguments eTypeParameter="#//OR/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//OR/accept/C"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IMPLIES" eSuperTypes="#//Binary">
    <eAnnotations source="doc">
      <details key="description" value="Specifies an IMPLIES expression."/>
      <details key="semantics" value="The left expression implies the right expression."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitIMPLIES(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitIMPLIES(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//IMPLIES/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//IMPLIES/accept/C"/>
          <eTypeArguments eTypeParameter="#//IMPLIES/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//IMPLIES/accept/C"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExecutablePrimitiveTerm" eSuperTypes="#//Constraint">
    <eAnnotations source="doc">
      <details key="description" value="Specifies an ExecutablePrimitive."/>
      <details key="semantics" value="The referred ExecutablePrimitive is used in the expression."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitExecutablePrimitiveTerm(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitExecutablePrimitiveTerm(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ExecutablePrimitiveTerm/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ExecutablePrimitiveTerm/accept/C"/>
          <eTypeArguments eTypeParameter="#//ExecutablePrimitiveTerm/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ExecutablePrimitiveTerm/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="primitive" lowerBound="1"
        eType="#//ExecutablePrimitive">
      <eAnnotations source="doc">
        <details key="description" value="Reference to an executable primitive."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AND_" eSuperTypes="#//Binary">
    <eAnnotations source="doc">
      <details key="description" value="Specifies an AND expression."/>
      <details key="semantics" value="Evaluates to true if both expressions are true."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitAND_(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitAND_(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//AND_/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//AND_/accept/C"/>
          <eTypeArguments eTypeParameter="#//AND_/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//AND_/accept/C"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Binary" abstract="true" eSuperTypes="#//Constraint">
    <eAnnotations source="doc">
      <details key="description" value="Specifies a binary expression."/>
      <details key="semantics" value="The semantics of Binary is given by the specializations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" eType="#//Constraint"
        containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Left side of expression."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1" eType="#//Constraint"
        containment="true">
      <eAnnotations source="doc">
        <details key="description" value="Right side of expression."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResolutionValue" eSuperTypes="#//ResolutionElement">
    <eAnnotations source="doc">
      <details key="description" value="The resolution value gives the arguments to a value substitution."/>
      <details key="semantics" value="The resolution value will override the replacement value in the value substitution."/>
      <details key="constraint" value="The type of the resolution value has to be of the same kind as the placement value."/>
    </eAnnotations>
    <eOperations name="accept">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return visitor.visitResolutionValue(this, context);"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;result := visitor.visitResolutionValue(self, context)&#xA;end"/>
        <details key="isAbstract" value="false"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ResolutionValue/accept/R"/>
      <eTypeParameters name="C"/>
      <eTypeParameters name="R"/>
      <eParameters name="visitor">
        <eGenericType eClassifier="#//visitors/Visitor">
          <eTypeArguments eTypeParameter="#//ResolutionValue/accept/C"/>
          <eTypeArguments eTypeParameter="#//ResolutionValue/accept/R"/>
        </eGenericType>
      </eParameters>
      <eParameters name="context">
        <eGenericType eTypeParameter="#//ResolutionValue/accept/C"/>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="doc">
        <details key="description" value="Defines a value to be used in a value substitution."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PlacementFragmentUsage">
    <eLiterals name="REPLACE"/>
    <eLiterals name="ADD" value="1"/>
    <eLiterals name="ADD_REPLACE" value="2"/>
  </eClassifiers>
  <eSubpackages name="visitors" nsURI="visitors" nsPrefix="visitors">
    <eClassifiers xsi:type="ecore:EClass" name="Visitable" abstract="true" interface="true">
      <eOperations name="accept">
        <eGenericType eTypeParameter="#//visitors/Visitable/accept/R"/>
        <eTypeParameters name="C"/>
        <eTypeParameters name="R"/>
        <eParameters name="visitor">
          <eGenericType eClassifier="#//visitors/Visitor">
            <eTypeArguments eTypeParameter="#//visitors/Visitable/accept/C"/>
            <eTypeArguments eTypeParameter="#//visitors/Visitable/accept/R"/>
          </eGenericType>
        </eParameters>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitable/accept/C"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Visitor" abstract="true" interface="true">
      <eTypeParameters name="ContextType"/>
      <eTypeParameters name="ResultType"/>
      <eOperations name="visitCVLModel">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//CVLModel"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReferenceSubstitution">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ReferenceSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitValueSubstitution">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ValueSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFragmentSubstitution">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//FragmentSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementFragment">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementFragment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementFragment">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementFragment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromPlacement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//FromPlacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToPlacement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ToPlacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToReplacement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ToReplacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromReplacement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//FromReplacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitCVLElement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//CVLElement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToBinding">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ToBinding"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromBinding">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//FromBinding"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitCompositeVariability">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//CompositeVariability"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementValue">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementObject">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementObject"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementValue">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementObject">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementObject"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitResolutionElement">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ResolutionElement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitType">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//Type"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitInvocation">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//Invocation"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIteratorResolution">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//IteratorResolution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIterator">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//Iterator"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementFragmentReference">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementFragmentReference"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitAssignment">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//Assignment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitConstraint">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//Constraint"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitNOT">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//NOT"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitOR">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//OR"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIMPLIES">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//IMPLIES"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitExecutablePrimitiveTerm">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ExecutablePrimitiveTerm"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitAND_">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//AND_"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitResolutionValue">
        <eGenericType eTypeParameter="#//visitors/Visitor/ResultType"/>
        <eParameters name="node" eType="#//ResolutionValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/Visitor/ContextType"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TopDownVisitor" abstract="true">
      <eTypeParameters name="ContextType"/>
      <eTypeParameters name="ResultType"/>
      <eOperations name="visitCVLModel">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.variabilitySpecification != void then node.variabilitySpecification.accept(self, context) end&#xA;node.resolutionSpecification.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getVariabilitySpecification() != null) { node.getVariabilitySpecification().accept(this, context); }&#xA;for (int i=0; i&lt;node.getResolutionSpecification().size(); i++) { ((cvl.ResolutionSpecification)node.getResolutionSpecification().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//CVLModel"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReferenceSubstitution">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ReferenceSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitValueSubstitution">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ValueSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFragmentSubstitution">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.boundaryElementBinding.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getBoundaryElementBinding().size(); i++) { ((cvl.BoundaryElementBinding)node.getBoundaryElementBinding().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//FragmentSubstitution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementFragment">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.boundaryElement.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getBoundaryElement().size(); i++) { ((cvl.PlacementBoundaryElement)node.getBoundaryElement().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementFragment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementFragment">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.boundaryElement.each{ e | e.accept(self, context) }&#xA;node.placements.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getBoundaryElement().size(); i++) { ((cvl.ReplacementBoundaryElement)node.getBoundaryElement().get(i)).accept(this, context); }&#xA;for (int i=0; i&lt;node.getPlacements().size(); i++) { ((cvl.PlacementLiteral)node.getPlacements().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementFragment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromPlacement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//FromPlacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToPlacement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ToPlacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToReplacement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ToReplacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromReplacement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//FromReplacement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitCVLElement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//CVLElement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitToBinding">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ToBinding"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitFromBinding">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//FromBinding"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitCompositeVariability">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.variabilitySpecification.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getVariabilitySpecification().size(); i++) { ((cvl.VariabilitySpecification)node.getVariabilitySpecification().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//CompositeVariability"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementValue">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitPlacementObject">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//PlacementObject"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementValue">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementObject">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementObject"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitResolutionElement">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.resolution.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getResolution().size(); i++) { ((cvl.IteratorResolution)node.getResolution().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ResolutionElement"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitType">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.body != void then node.body.accept(self, context) end&#xA;if node.replacement != void then node.replacement.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getBody() != null) { node.getBody().accept(this, context); }&#xA;if (node.getReplacement() != null) { node.getReplacement().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//Type"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitInvocation">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.resolutionSpecification != void then node.resolutionSpecification.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getResolutionSpecification() != null) { node.getResolutionSpecification().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//Invocation"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIteratorResolution">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.choice.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getChoice().size(); i++) { ((cvl.ResolutionElement)node.getChoice().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//IteratorResolution"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIterator">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.variabilitySpecification.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getVariabilitySpecification().size(); i++) { ((cvl.VariabilitySpecification)node.getVariabilitySpecification().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//Iterator"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitReplacementFragmentReference">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ReplacementFragmentReference"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitAssignment">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//Assignment"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitConstraint">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//Constraint"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitNOT">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.term != void then node.term.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getTerm() != null) { node.getTerm().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//NOT"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitOR">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.left != void then node.left.accept(self, context) end&#xA;if node.right != void then node.right.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getLeft() != null) { node.getLeft().accept(this, context); }&#xA;if (node.getRight() != null) { node.getRight().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//OR"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitIMPLIES">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.left != void then node.left.accept(self, context) end&#xA;if node.right != void then node.right.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getLeft() != null) { node.getLeft().accept(this, context); }&#xA;if (node.getRight() != null) { node.getRight().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//IMPLIES"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitExecutablePrimitiveTerm">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ExecutablePrimitiveTerm"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitAND_">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;if node.left != void then node.left.accept(self, context) end&#xA;if node.right != void then node.right.accept(self, context) end&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (node.getLeft() != null) { node.getLeft().accept(this, context); }&#xA;if (node.getRight() != null) { node.getRight().accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//AND_"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eOperations name="visitResolutionValue">
        <eAnnotations source="kermeta">
          <details key="body" value="do&#xA;node.resolution.each{ e | e.accept(self, context) }&#xA;end"/>
          <details key="isAbstract" value="false"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i=0; i&lt;node.getResolution().size(); i++) { ((cvl.IteratorResolution)node.getResolution().get(i)).accept(this, context); }&#xA;return null;&#xA;"/>
        </eAnnotations>
        <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
        <eParameters name="node" eType="#//ResolutionValue"/>
        <eParameters name="context">
          <eGenericType eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        </eParameters>
      </eOperations>
      <eGenericSuperTypes eClassifier="#//visitors/Visitor">
        <eTypeArguments eTypeParameter="#//visitors/TopDownVisitor/ContextType"/>
        <eTypeArguments eTypeParameter="#//visitors/TopDownVisitor/ResultType"/>
      </eGenericSuperTypes>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
